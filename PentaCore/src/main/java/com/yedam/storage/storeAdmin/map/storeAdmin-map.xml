<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.storage.storeAdmin.map.StoreAdminMapper">


<!-- 
	private String use_num;
	private Date use_start;
	private Date use_end;
	private String info_num;
	private String store_code;
	private String offer_code;
	private String member_id;
 -->



<!-- ============================== 동영 ================================ -->
<!-- 스토리지 현황 페이지 SQL -->
<select id="StorageList" resultType="StoreAdminVO" parameterType="StoreAdminVO">
	SELECT B.STORAGE_CODE, B.INFO_NUM, S.STORAGE_NAME, A.OFFER_CODE,
		    CASE
		        WHEN B.INFO_USE = 'Y' THEN '사용중(' || TO_CHAR(A.USE_END, 'YYYY-MM-DD') || ')까지'
		        WHEN B.INFO_USE = 'N' THEN '미사용'
		    END AS INFO_USE
	FROM STORAGE S,(SELECT * FROM USE_STORAGE WHERE STORE_CODE = #{store_code} ) A RIGHT OUTER JOIN (SELECT * FROM STORAGE_INFO WHERE STORE_CODE = #{store_code} ) B
	ON A.INFO_NUM = B.INFO_NUM
	WHERE B.STORAGE_CODE = S.STORAGE_CODE
	ORDER BY B.INFO_NUM ASC
</select>

<select id="StorageInfo" resultType="StoreAdminVO">
	SELECT STORAGE_NAME, STORAGE_CODE
	FROM STORAGE
</select>

<select id="selectStorageInfo" parameterType="StoreAdminVO" resultType="StoreAdminVO">
	SELECT M.MEMBER_NAME , O.OFFER_PRODUCT, U.USE_START, U.USE_END, U.STORE_CODE
	FROM MEMBER M, OFFER O, USE_STORAGE U
	WHERE M.MEMBER_ID = U.MEMBER_ID
	AND O.OFFER_CODE = U.OFFER_CODE
	AND U.STORE_CODE = #{store_code}
	AND O.OFFER_CODE = #{offer_code}
	ORDER BY U.USE_NUM ASC
</select>

<!-- 현재 그 지점의 예약 되어있는 리스트 (수정 INFO_NUM 이 NULL인 사람들만 Select 하게 만듬 == 이미 예약되어있는데 클릭하면 그 정보가 떠서)-->
<select id="offerInfoList"  parameterType="StoreAdminVO" resultType="StoreAdminVO">
	 (SELECT M.MEMBER_ID, O.OFFER_PRODUCT, NVL(O.OFFER_RENTAL, 'X')AS OFFER_RENTAL, O.STORAGE_CODE, U.USE_START, U.USE_END, U.STORE_CODE, O.OFFER_CODE, T.STORAGE_NAME
   FROM MEMBER M, OFFER O, USE_STORAGE U, STORAGE T
   WHERE M.MEMBER_ID = U.MEMBER_ID
   AND O.OFFER_CODE = U.OFFER_CODE
   AND U.STORE_CODE = #{store_code}
   AND U.INFO_NUM IS NULL
   AND U.USE_END > TRUNC(SYSDATE)
   AND O.STORAGE_CODE = T.STORAGE_CODE
   )
   UNION
   (SELECT MEMBER_ID, APPLY_PRODUCT, NULL, 'f20', APPLY_START, APPLY_END, STORE_CODE, APPLY_CODE, '라지플러스' FROM CONVEY_APPLY WHERE APPLY_WHETHER = 'Y' AND STORE_CODE = #{store_code} AND USE_NUM IS NULL)
</select>

<select id="selectOfferInfo" parameterType="StoreAdminVO" resultType="StoreAdminVO">
	SELECT M.MEMBER_ID , O.OFFER_PRODUCT, nvl(O.OFFER_RENTAL, 'X'), O.STORAGE_CODE,U.USE_START, U.USE_END, U.STORE_CODE, O.OFFER_CODE
	FROM MEMBER M, ((SELECT OFFER_CODE, OFFER_PRODUCT, store_code, storage_code, offer_rental FROM OFFER) UNION (SELECT APPLY_CODE, APPLY_PRODUCT, STORE_CODE, 'f20', NULL FROM CONVEY_APPLY WHERE APPLY_WHETHER = 'Y' AND STORE_CODE = #{store_code})) O, USE_STORAGE U
	WHERE M.MEMBER_ID = U.MEMBER_ID
	AND O.OFFER_CODE = U.OFFER_CODE
	AND U.STORE_CODE = #{store_code}
	AND O.STORAGE_CODE = #{storage_code}
	AND U.INFO_NUM IS NULL
	AND U.USE_END > TRUNC(SYSDATE)
	ORDER BY U.USE_NUM ASC
</select>

<!-- 보관이사 신청 고객 스토리지 할당 후 convey_apply 테이블에 use_num 업데이트 하는 프로시저 -->
<select id="copyUseNum" parameterType="StoreAdminVO" statementType="CALLABLE">
	{
		CALL copy_use_num (
			#{offer_code}
		)
	}
</select>

<select id="unUseStorageList" parameterType="StoreAdminVO" resultType="StoreAdminVO">
	SELECT I.*,TO_CHAR(I.INFO_NUM || S.STORAGE_NAME) AS storage_name
	FROM STORAGE_INFO I, STORAGE S
	WHERE I.STORAGE_CODE = S.STORAGE_CODE
	AND I.INFO_USE = 'N'
	AND I.STORE_CODE = #{store_code}
	AND I.STORAGE_CODE = #{storage_code}
	ORDER BY 1 ASC
</select>

<update id="updateUseStorage" parameterType="StoreAdminVO">
	UPDATE USE_STORAGE 
	SET INFO_NUM = #{info_num} 
	WHERE OFFER_CODE = #{offer_code}
</update>

<!-- updateUseStorage 실행 후 동작될 프로시저  -->
<select id="updateUseProcedure" parameterType="StoreAdminVO" statementType="CALLABLE">
	{
		CALL update_use_storage (
			#{info_num}
		)
	}
</select>

<select id="storeTemHumInfo" parameterType="com.yedam.storage.store.vo.StoreVO" resultType="com.yedam.storage.store.vo.StoreVO">
	SELECT HUMIDITY, TEMPERATURE, STORE_NAME
	FROM STORE
	WHERE STORE_CODE = #{store_code}
</select>

<update id="storeTemHumUpdate" parameterType="com.yedam.storage.store.vo.StoreVO">
	UPDATE STORE 
	SET HUMIDITY = #{humidity}, TEMPERATURE = #{temperature} 
	WHERE STORE_CODE = #{store_code}
</update>

<!-- 사후보고서 리스트 (member_id별 그리드 생성용)-->
<select id="premiumReportList" resultType="StoreAdminVO" parameterType="StoreAdminVO">
	SELECT C.CONDITION_NUM, C.USE_NUM, U.MEMBER_ID, U.STORE_CODE, C.CONDITION_TITLE, C.CONDITION_DATE
	FROM CONDITION_LIST C, USE_STORAGE U
	WHERE C.USE_NUM = U.USE_NUM
	AND U.MEMBER_ID = #{member_id} 
	ORDER BY C.CONDITION_NUM DESC
</select>

<select id="premiumReportSelect" parameterType="StoreAdminVO" resultType="StoreAdminVO">
	SELECT C.CONDITION_NUM, C.USE_NUM, U.MEMBER_ID, U.STORE_CODE, C.CONDITION_TITLE, C.CONDITION_DATE, C.CONDITION_COMMENT
	FROM CONDITION_LIST C, USE_STORAGE U
	WHERE C.USE_NUM = U.USE_NUM
	AND U.MEMBER_ID = #{member_id}
	AND C.CONDITION_NUM = #{condition_num}
</select>

<update id="updatePremiumReport" parameterType="StoreAdminVO">
	UPDATE CONDITION_LIST 
	SET CONDITION_COMMENT = #{condition_comment}, CONDITION_TITLE = #{condition_title}
	WHERE CONDITION_NUM = #{condition_num}
</update>

<!-- ============================== 동영 ================================ -->

<!-- 최반야 : 지점 공지사항 페이지 -->
<select id="storeNoticeList" parameterType="StoreAdminVO" resultType="StoreAdminVO">
	SELECT * 
	FROM notice
	WHERE store_code = #{store_code}
</select> 

<insert id="registNotice" parameterType="StoreAdminVO">
	INSERT INTO notice(notice_num, notice_title, notice_content, notice_date, store_code)
	VALUES(notice_seq.nextval, #{notice_title}, #{notice_content}, sysdate, #{store_code})
</insert>

<select id="storeNoticeSelect" parameterType="StoreAdminVO" resultType="StoreAdminVO">
	SELECT * 
	FROM notice
	WHERE notice_num = #{notice_num}
</select>

<update id="storeNoticeEdit" parameterType="StoreAdminVO">
	UPDATE notice 
	SET notice_title = #{notice_title}, notice_content = #{notice_content}
	WHERE notice_num = #{notice_num}
</update>

<delete id="storeNoticeDelete" parameterType="StoreAdminVO">
	DELETE FROM notice
	WHERE notice_num = #{notice_num}
</delete>
 
 
 
<!-- 전형민 -->
<select id="usingStrorageList" parameterType="string" resultType="StoreAdminVO" >

 
		Select * from (

						select ROW_NUMBER() OVER (ORDER BY u.use_start asc ) AS NUM, u.* ,m.member_name			
						from use_storage u join member m on u.member_id = m.member_id
                		where use_end > sysdate and store_code =#{p} )  
		
		
</select>
 
<select id="expiredStrorageList" parameterType="string" resultType="StoreAdminVO" >
		<![CDATA[ 
		Select * from (

						select ROW_NUMBER() OVER (ORDER BY u.use_start asc ) AS NUM, u.* ,m.member_name			
						from use_storage u join member m on u.member_id = m.member_id
                		where use_end <= sysdate and store_code =#{p} )
		]]>
</select>

	 <select id ="storageUserDetail" parameterType="string" resultType="StoreAdminVO">
			SELECT DISTINCT a.member_id, a.member_name, a.member_tel, b.*, o.offer_product,o.offer_premium, o.offer_wash,
   				l.laundry_consign, l.laundry_collect
				FROM member a JOIN use_storage b
				ON (a.member_id = b.member_id)
				JOIN offer o
				ON (b.offer_code = o.offer_code) 
			    full outer join laundry l 
			    on l.offer_code = o.offer_code
				WHERE b.use_num = #{p}
	
	</select> 
	
	
	
	<insert id="insertReport" parameterType="StoreAdminVO">
	insert into CONDITION_LIST 
	values(#{condition_title},sysdate,'CD' || lpad(cd_seq.nextval,3,0),#{use_num},#{condition_comment})  
	</insert>
	
	<update id="updateLaundryConsign" parameterType="StoreAdminVO">
	update laundry set laundry_consign = to_date(#{laundry_consign},'yyyy-mm-dd hh24:mi:ss') where offer_code= #{offer_code}
	</update>
	
	<update id="updateLaundryCollect" parameterType="StoreAdminVO">
	update laundry set laundry_collect = to_date(#{laundry_collect},'yyyy-mm-dd hh24:mi:ss') where offer_code= #{offer_code}
	</update> 
	
	<insert id="insertCoupon" parameterType="StoreAdminVO">
	INSERT INTO coupon VALUES( 'CP' || lpad(coupon_seq.nextval,3,0), #{coupon_name}, #{coupon_discount}, #{coupon_start}, #{coupon_end}, 
	#{store_code}) 
	</insert>
	
	<!-- 사용자가 신청한 지점투어 리스트 -->
	<select id="storeTourList" resultType="StoreAdminVO" parameterType="StoreAdminVO">
		SELECT t.*, s.store_name, m.member_name
		FROM (tour t join store s 
		on t.store_code = s.store_code) join member m on
   		m.member_id= t.member_id
    	where s.store_code = #{store_code}
	</select>
	
	<!-- 투어 신청 확정 -->
	<update id="updateTour" parameterType="StoreAdminVO">
		UPDATE tour 
		SET tour_complete = #{tour_complete}
		WHERE tour_code = #{tour_code}
	</update>
	
 <!--전형민 -->
 
 <!-- 최반야 - 1:1 문의 관리 -->
 <!-- 문의 내역 리스트 -->
 <select id="customerAskList" parameterType="StoreAdminVO" resultType="StoreAdminVO">
 	SELECT question_num, question_title, question_date
 	FROM question
 	WHERE store_code = #{store_code}
 	AND question_parents = 1
 	ORDER BY question_group DESC
 </select>
 <!-- 문의 상세 조회 -->
 <select id="customerAskSelect" parameterType="StoreAdminVO" resultType="StoreAdminVO">
 	SELECT (select count(*) from question where question_group = q.question_group) group_cnt, q.*
 	FROM question q
 	WHERE question_group IN
 		(SELECT question_group
 		FROM question
 		WHERE question_num = #{question_num})
 	ORDER BY question_group DESC, question_parents ASC
 </select>
 <!-- 문의 답변 달기 -->
 <insert id="answerAsk" parameterType="StoreAdminVO">
 	insert into question(question_num, question_parents, question_content, store_code, 
 						member_id, question_date, question_group)
	values(question_seq.nextval, 2, #{question_content}, #{store_code}, 
		#{member_id}, sysdate, #{question_group})
 </insert>
 <!-- 최반야 - 1:1 문의 관리 끝 -->
 	


	
	
	


 
 
</mapper>



<!-- 
 로그인 
<select id="loginCheck" parameterType="com.yedam.storage.member.vo.MemberVO" resultType="com.yedam.storage.member.vo.MemberVO" >
		select * from member where member_id = #{member_id} and member_pwd = #{member_pwd} and member_disable = 'N'
</select>

회원가입	
<insert id="memberInsert" parameterType="hashmap" >
		insert into member values(#{member_id},#{member_pwd},#{member_name},#{member_addr},#{member_tel},#{member_email},#{member_birth},'N')
</insert>	

(멤버 수정)
<update id="memberPwUpdate" parameterType="hashmap">
		update member set member_pwd=#{member_pwd} where member_id=#{member_id}
</update>
-->
	
