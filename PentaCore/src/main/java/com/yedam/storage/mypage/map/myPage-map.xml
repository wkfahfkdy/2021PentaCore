<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.storage.mypage.map.MyPageMap">
	
	<!-- 사용자가 이용 중인 지점의 공지사항 리스트 -->
	<select id="noticeSelectList" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT * 
		FROM notice
		WHERE store_code = #{store_code}
		ORDER BY notice_num desc
	</select>
	
	<!-- My Page 메인 페이지 하단에서 보여줄 정보 : 현재 이용 중인 정보 -->
	<select id="usedStorageList" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT u.*, s.storage_width, s.storage_height, s.storage_vertical, s.storage_name, o.offer_product,
				o.offer_wash, o.offer_premium
		FROM storage s JOIN offer o
		ON (s.storage_code = o.storage_code)
		JOIN use_storage u
		ON (u.offer_code = o.offer_code)
		JOIN store t
		ON(u.store_code = t.store_code)
		WHERE u.member_id = #{member_id}
	</select>
	
	<!-- 사용자가 이용 중인 정보의 고유번호 조회 -->
	<select id="useStorage" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT use_num
		FROM use_storage
		WHERE member_id = #{member_id}
	</select>
	
	<!-- 사용자가 이용 중인 지점명 및 이용 중인 스토리지 고유넘버 조회 -->
	<select id="useStore" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT store_name, info_num
		FROM use_storage u, store s
		WHERE u.store_code = s.store_code
		AND member_id = #{member_id}
	</select>
	
	<!-- 사용자가 이용 중인 지점의 리뷰를 작성한 적 있는가 -->
	<select id="userReview" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT * 
		FROM review
		WHERE member_id = #{member_id}
		AND store_code = #{store_code}
	</select>
	
	<!-- 사용자가 저장한 셀프 견적서 내역 -->
	<select id="offerSelectList" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT o.*, s.store_name
		FROM offer o, store s
		WHERE o.store_code = s.store_code
    	AND member_id = #{member_id}
    	ORDER BY o.offer_code desc
	</select>
	
	<!-- 셀프 견적서 상세 -->
	<select id="myOfferSelect" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT o.*, (o.offer_price*c.coupon_discount) as total_price, 
				add_months(o.offer_start, o.offer_date) as offer_end, 
				s.store_name, s.store_tel,s.STORE_ADDR, s.STORE_BUS, s.STORE_EMAIL,s.STORE_SUBWAY, 
				t.storage_name, 
        		t.STORAGE_PRICE, c.coupon_name
		FROM offer o JOIN store s
		ON (o.store_code = s.store_code)
		JOIN storage t
		ON (o.storage_code = t.storage_code)
		JOIN coupon c
		ON (o.COUPON_CODE = c.coupon_code)
		WHERE offer_code = #{offer_code}
	</select>
	
	<!-- 사용자가 신청한 운송 신청 내역 -->
	<select id="conveyListAll" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT a.apply_code, a.apply_product, a.apply_start, a.apply_whether, s.store_name 
		FROM convey_apply a, store s
		WHERE a.store_code = s.store_code 
		AND member_id = #{member_id}
	</select>
	
	<!-- 물품 운송 신청 상세 -->
	<select id="myConveySelect" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT a.*, s.store_name<if test="use_num !=null and use_num != ''">, u.info_num </if>
		FROM convey_apply a JOIN store s
		ON (a.store_code = s.store_code)
		<if test="use_num != null and use_num != ''">
			JOIN use_storage u
			ON (a.use_num = u.use_num)
		</if> 
		WHERE apply_code = #{apply_code}
	</select>
	
	<!-- 지점 정보 리스트: 지도Api용 리스트에서 사용 -->
	<select id="storeInfoSelect" resultType="MyPageVO">
		SELECT 	store_name, store_addr, store_code
		FROM 	store
		WHERE store_code LIKE 'ST%'
	</select>
	
	<!-- 물품 운송 신청 등록 -->
	<insert id="conveyInsert" parameterType="MyPageVO">
		INSERT INTO convey_apply (apply_code, member_id, 
				apply_addr, apply_product, apply_start, 
				apply_end, apply_whether, use_num, store_code)
		VALUES('CA'||LPAD(ca_seq.nextval,3,0), #{member_id}, 
			#{apply_addr}, #{apply_product}, #{apply_start}, 
			#{apply_end}, #{apply_whether}, 
			(SELECT DISTINCT use_num
			 FROM use_storage
			 WHERE member_id = #{member_id}), 
			#{store_code})
	</insert>
	
	<!-- 사용자가 신청한 투어 리스트 -->
	<select id="storeTourListAll" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT t.*, s.store_name
		FROM tour t, store s
		WHERE t.store_code = s.store_code
		AND t.tour_cancel = 'N' 
		AND member_id = #{member_id}
	</select>
	
	<!-- 투어 신청 등록 -->
	<insert id="storeTourRegist" parameterType="MyPageVO">
		INSERT INTO tour(tour_code, member_id, tour_tel, store_code, tour_date, tour_time) 
		VALUES('TR'||LPAD(tr_seq.nextval,3,0), #{member_id}, #{tour_tel}, #{store_code}, #{tour_date}, #{tour_time})
	</insert>
	
	<!-- 투어 신청 취소 -->
	<update id="cancelTour" parameterType="MyPageVO">
		UPDATE tour 
		SET tour_cancel = #{tour_cancel}
		WHERE tour_code = #{tour_code}
	</update>
	
	<!-- 리뷰 등록 -->
	<insert id="reviewRegist" parameterType="MyPageVO">
		INSERT INTO review(review_num, review_title, review_content, review_date, store_code, member_id)
		VALUES(review_seq.nextval,#{review_title}, #{review_content}, sysdate, #{store_code}, #{member_id})
	</insert>
	
	<!-- 공지사항 상세 조회 -->
	<select id="noticeSelect" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT n.*, s.store_name
		FROM notice n, store s
		WHERE n.store_code = s.store_code
		AND notice_num = #{notice_num}
	</select>
	
	<!-- 물품 컨디션 보고서 리스트 -->
	<select id="reportList" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT r.*, s.store_name
		FROM condition_list r JOIN use_storage u
		ON (r.use_num = u.use_num)
		JOIN store s
		ON (u.store_code = s.store_code)
		WHERE member_id = #{member_id}
	</select>
	
	<!-- 물품 컨디션 보고서 상세 조회 -->
	<select id="reportSelect" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT r.*, s.store_name, u.use_start, u.use_end, o.offer_product
		FROM condition_list r JOIN use_storage u
		ON (r.use_num = u.use_num)
		JOIN store s
		ON (u.store_code = s.store_code)
		JOIN offer o
		ON (u.offer_code = o.offer_code)
		WHERE condition_num = #{condition_num}
	</select>
	
	<!-- MyPage 1:1 문의 내역 리스트 -->
	<select id="myAskList" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT q.question_num, q.question_title, q.question_date, s.store_name 
		FROM question q, store s
		WHERE q.store_code = s.store_code
		AND member_id = #{member_id}
		ORDER BY question_group DESC
	</select>
	
	<!-- My Page 1:1 문의 등록 -->
	<insert id="registAsk" parameterType="MyPageVO">
		INSERT INTO question
		VALUES(question_seq.nextval, 1, #{question_content}, null, #{store_code}, #{member_id}, sysdate, question_seq.nextval, #{question_title})
	</insert>
	
	<!-- My Page 1:1 문의 상세 : Modal창으로 데이터 전달 -->
	<select id="myAskSelect" resultType="MyPageVO" parameterType="MyPageVO">
		SELECT (select count(*) from question where question_group = q.question_group) group_cnt, q.*, s.store_name
		FROM question q, store s
		WHERE q.store_code = s.store_code
		AND question_group IN
			(SELECT question_group 
			FROM question
			WHERE member_id = #{member_id}
			AND question_num = #{question_num})
		ORDER BY question_group DESC, question_parents ASC
	</select>
</mapper>