<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.storage.member.map.MemberMapper">

<!--  
private String member_id;
private String member_pwd;
private String member_name;
private String member_addr;
private String member_tel;
private String member_email;
private String member_birth;
private String member_disable;
-->

<!-- 로그인 -->
<!-- 멤버아이디 비밀번호 체크-->
<select id="loginCheck" parameterType="com.yedam.storage.member.vo.MemberVO" resultType="com.yedam.storage.member.vo.MemberVO" >
		select * from member where member_id = #{member_id} and member_pwd = #{member_pwd} and member_disable = 'N'
</select>
<!-- 회원아이디 비밀번호 체크-->
<select id="employeeLoginCheck" parameterType="com.yedam.storage.member.vo.MemberVO" resultType="com.yedam.storage.member.vo.MemberVO" >
		select * from employees where employee_id = #{member_id} and employee_pwd = #{member_pwd} and employee_disable = 'N'
</select>

<!-- 지점관리자로 로그인 -->
<select id="StoreAdminLoginCheck" parameterType="com.yedam.storage.member.vo.MemberVO" resultType="com.yedam.storage.member.vo.MemberVO" >
		select e.*,s.store_name from employees e join store s on e.store_code = s.store_code where employee_id = #{member_id} and employee_disable = 'N'
</select>
	
<!-- 로그인(비밀번호 찾기)  -->	
<select id="modalEmailCheck" parameterType="com.yedam.storage.member.vo.MemberVO" resultType="com.yedam.storage.member.vo.MemberVO" >
		select * from member where member_name = #{member_name} and member_email = #{member_email} and member_disable = 'N'
</select>


<!-- 회원가입 -->	
<insert id="memberInsert" parameterType="hashmap" >
		insert into member values(#{member_id},#{member_pwd},#{member_name},#{member_addr},#{member_tel},#{member_email},#{member_birth},'N')
</insert>	

	
<select id="emailCheck" parameterType="string" resultType="com.yedam.storage.member.vo.MemberVO" >
		select * from member where member_email = #{p} and member_disable = 'N'
</select>

<select id="telCheck" parameterType="string" resultType="com.yedam.storage.member.vo.MemberVO" >
		select * from member where member_tel = #{p} and member_disable = 'N'
	</select>
	
<select id="idCheck" parameterType="string" resultType="com.yedam.storage.member.vo.MemberVO" >
		select * from member where member_id = #{p} and member_disable = 'N'
</select>	


<!-- Session 저장용 -->
<select id="memberInfo" parameterType="com.yedam.storage.member.vo.MemberVO" resultType="com.yedam.storage.member.vo.MemberVO">
		select 	member_id, member_name, member_tel, member_addr
		from 	id_all_check
		where 	member_id = #{member_id}
</select>
<!-- Session 저장용 -->
<select id="UseCodeInfo" parameterType="MyPageVO" resultType="MyPageVO">
		select DISTINCT	store_code 
		from 	use_storage 
		where 	member_id = #{member_id}
</select>

<!-- 지점 관리자의 지점 코드 값 -->
<select id="empStoreCode" parameterType="String" resultType="String">
		select 	store_code
		from 	employees
		where 	employee_id = #{employee_id}
</select>

<!-- tour에서 member_name 요구 / parameterType이 String -->
<select id="tourMemberName" parameterType="String" resultType="com.yedam.storage.member.vo.MemberVO">
		select 	member_name
		from 	id_all_check
		where 	member_id = #{member_id}
</select>
	
	
	<!-- 회원정보 수정 -->
	<select id="getMemberInfo" parameterType="string" resultType="com.yedam.storage.member.vo.MemberVO">
			select 	* 
			from 	id_all_check 
			where 	member_id = #{p}
			and 	member_disable = 'N'
	</select>	
	<!-- (멤버 수정) -->
	<update id="memberPwUpdate" parameterType="hashmap">
		update member set member_pwd=#{member_pwd} where member_id=#{member_id}
	</update>
	
	<update id="memberEmailUpdate" parameterType="hashmap">
		update member set member_email=#{member_email} where member_id=#{member_id}
	</update>
	
	<update id="memberPhoneUpdate" parameterType="hashmap">
		update member set member_tel=#{member_tel} where member_id=#{member_id}
	</update>
	
	<update id="memberAddrUpdate" parameterType="hashmap">
		update member set member_addr=#{member_addr} where member_id=#{member_id}
	</update>
	
	<!-- (직원 수정) -->
	<update id="employeePwUpdate" parameterType="hashmap">
		update employees set employee_pwd=#{employee_pwd} where employee_id=#{employee_id}
	</update>
	
	<update id="employeeEmailUpdate" parameterType="hashmap">
		update employees set employee_email=#{employee_email} where employee_id=#{employee_id}
	</update>
	
	<update id="employeePhoneUpdate" parameterType="hashmap">
		update employees set employee_tel=#{employee_tel} where employee_id=#{employee_id}
	</update>
	
	<update id="employeeAddrUpdate" parameterType="hashmap">
		update employees set employee_addr=#{employee_addr} where employee_id=#{employee_id}
	</update>
	
	
	
</mapper>
